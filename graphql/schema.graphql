scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    user(
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
    ): User @find

    users(name: String @where(operator: "like")): [User!]!
        @paginate(defaultCount: 10)

    postsResolver: [Post!]!
        @field(resolver: "App\\Graphql\\Queries\\PostsResolver@__invoke")

    postResolver(id: ID!): Post
        @field(resolver: "App\\Graphql\\Queries\\PostResolver@__invoke")
}
type Mutation {
    createPost(title: String!, body: String!, user_id: ID!): Post @create
    updatePost(id: ID!, title: String, body: String): Post @update
    deletePost(id: ID!): Post! @delete
}
type User {
    id: ID!
    name: String!
    email: String!
    posts: [Post!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Post {
    id: ID!
    title: String!
    body: String!
    user: User! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}
